from cvxopt import solvers, matrix
import numpy as np
import sklearn.svm

#############################################Results
    # pcost       dcost       gap    pres   dres                                                                                                                                                     0:  4.5713e-01  2.3378e+00  4e+00  2e+00  6e-16                                                                                                                                                    1:  9.8313e-01  3.9366e+00  7e-01  7e-01  3e-15                                                                                                                                                    2:  3.8561e+00  7.8776e+00  1e+00  4e-01  1e-13                                                                                                                                                    3:  8.5531e+00  8.9940e+00  3e-01  4e-02  3e-14                                                                                                                                                    4:  8.9951e+00  9.0000e+00  3e-03  5e-04  6e-14                                                                                                                                                    5:  9.0000e+00  9.0000e+00  3e-05  5e-06  2e-14                                                                                                                                                    6:  9.0000e+00  9.0000e+00  3e-07  5e-08  3e-14                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.99999996 0.99999998] [-3.99999989]                                                                                                                                                              [[1. 1.]] [-4.]                                                                                                                                                                                    Acc=1.0                                                                                                                                                                                                 pcost       dcost       gap    pres   dres                                                                                                                                                     0:  1.4564e+00  1.1836e+01  2e+01  2e+00  4e-15                                                                                                                                                    1:  2.7889e+00  2.1466e+01  6e+00  1e+00  3e-15                                                                                                                                                    2:  1.1208e+01  1.0202e+02  1e+01  9e-01  9e-14                                                                                                                                                    3:  3.2657e+01  1.9223e+02  3e+01  8e-01  6e-13                                                                                                                                                    4:  1.1376e+02  3.1957e+02  7e+01  6e-01  1e-12                                                                                                                                                    5:  3.4044e+02  4.2149e+02  6e+01  2e-01  2e-12                                                                                                                                                    6:  4.2867e+02  4.3311e+02  3e+00  9e-03  4e-12                                                                                                                                                    7:  4.3393e+02  4.3418e+02  3e-01  6e-04  1e-11                                                                                                                                                    8:  4.3424e+02  4.3424e+02  3e-03  6e-06  2e-11                                                                                                                                                    9:  4.3424e+02  4.3424e+02  3e-05  6e-08  2e-11                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.01047857]                                                                                                                                                                                       Acc=1.0                                                                                                                                                                                            Passed                                                                                                                                                                                                  pcost       dcost       gap    pres   dres                                                                                                                                                     0:  1.5308e+00  1.1154e+01  2e+01  2e+00  2e-15                                                                                                                                                    1:  3.3051e+00  1.8963e+01  4e+00  9e-01  1e-15                                                                                                                                                    2:  6.7220e+00  4.8073e+01  7e+00  9e-01  2e-14                                                                                                                                                    3:  2.3513e+01  9.7735e+01  2e+01  8e-01  9e-12                                                                                                                                                    4:  8.4211e+01  1.5233e+02  3e+01  4e-01  9e-12                                                                                                                                                    5:  1.5868e+02  1.6853e+02  8e+00  5e-02  1e-11                                                                                                                                                    6:  1.6879e+02  1.6891e+02  1e-01  6e-04  3e-11                                                                                                                                                    7:  1.6891e+02  1.6891e+02  1e-03  6e-06  3e-11                                                                                                                                                    8:  1.6891e+02  1.6891e+02  1e-05  6e-08  2e-11                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.00609535]                                                                                                                                                                                       Acc=1.0                                                                                                                                                                                            Passed                                                                                                                                                                                                  pcost       dcost       gap    pres   dres                                                                                                                                                     0:  3.2744e-01  1.2343e+01  6e+01  2e+00  2e+01                                                                                                                                                    1:  6.8634e+00  2.0108e+01  3e+01  1e+00  1e+01                                                                                                                                                    2:  9.4544e+00  3.9302e+01  3e+01  1e+00  1e+01                                                                                                                                                    3:  3.4940e+01  1.1080e+02  2e+01  6e-01  6e+00                                                                                                                                                    4:  5.8114e+01  1.2868e+02  3e+01  5e-01  5e+00                                                                                                                                                    5:  1.4039e+02  1.3820e+02  2e+01  6e-02  5e-01                                                                                                                                                    6:  1.4776e+02  1.4775e+02  3e-01  9e-04  8e-03                                                                                                                                                    7:  1.4786e+02  1.4786e+02  3e-03  9e-06  8e-05                                                                                                                                                    8:  1.4786e+02  1.4786e+02  3e-05  9e-08  8e-07                                                                                                                                                    9:  1.4786e+02  1.4786e+02  3e-07  9e-10  8e-09                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.00216811]                                                                                                                                                                                       Acc=1.0                                                                                                                                                                                            Passed                                                                                                                                                                                                  pcost       dcost       gap    pres   dres                                                                                                                                                     0:  1.1795e+00  2.5719e+01  5e+01  2e+00  1e+01                                                                                                                                                    1:  5.7721e+00  3.1818e+01  3e+01  1e+00  7e+00                                                                                                                                                    2:  1.2245e+01  9.6168e+01  3e+01  1e+00  6e+00                                                                                                                                                    3:  4.4781e+01  2.3324e+02  6e+01  8e-01  5e+00                                                                                                                                                    4:  1.2042e+02  3.3242e+02  9e+01  6e-01  4e+00                                                                                                                                                    5:  3.3582e+02  4.2127e+02  6e+01  2e-01  1e+00                                                                                                                                                    6:  4.3307e+02  4.3694e+02  4e+00  9e-03  5e-02                                                                                                                                                    7:  4.3790e+02  4.3793e+02  4e-02  9e-05  5e-04                                                                                                                                                    8:  4.3794e+02  4.3794e+02  4e-04  9e-07  5e-06                                                                                                                                                    9:  4.3795e+02  4.3795e+02  4e-06  9e-09  5e-08                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.01202121]                                                                                                                                                                                       Acc=1.0                                                                                                                                                                                            Passed                                                                                                                                                                                                  pcost       dcost       gap    pres   dres                                                                                                                                                     0:  4.4027e-01  1.1462e+01  6e+01  2e+00  3e+01                                                                                                                                                    1:  7.9833e+00  4.7023e+00  2e+01  8e-01  1e+01                                                                                                                                                    2:  1.9480e+01  1.6674e+01  6e+00  8e-02  1e+00                                                                                                                                                    3:  2.0496e+01  1.9942e+01  6e-01  2e-03  3e-02                                                                                                                                                    4:  2.0330e+01  2.0312e+01  2e-02  4e-05  6e-04                                                                                                                                                    5:  2.0326e+01  2.0325e+01  2e-04  4e-07  6e-06                                                                                                                                                    6:  2.0326e+01  2.0326e+01  2e-06  4e-09  6e-08                                                                                                                                                   Optimal solution found.                                                                                                                                                                            [0.00105247]                                                                                                                                                                                       Acc=1.0                                                                                                                                                                                            Passed
#######################################################
class SVM4342 ():
    def __init__ (self):
        pass

    # Expects each *row* to be an m-dimensional row vector. X should
    # contain n rows, where n is the number of examples.
    # y should correspondingly be an n-vector of labels (-1 or +1).
    def fit (self, X, y):

        Xtilde = np.append(X, np.ones((X.shape[0], 1)), axis=1)
        m, n = Xtilde.shape

        G = -1 * y.reshape(1, y.shape[0]).T * Xtilde
        P = np.eye(n)
        q = np.zeros(n)
        h = np.full((m, 1), -1)

        # Solve -- if the variables above are defined correctly, you can call this as-is:
        sol = solvers.qp(matrix(P, tc='d'), matrix(q, tc='d'), matrix(G, tc='d'), matrix(h, tc='d'))

        # Fetch the learned hyperplane and bias parameters out of sol['x']
        results = np.array(sol['x'])
        self.w = results[:-1].reshape((results[:-1].shape[0]))
        self.b = results[-1]

    # Given a 2-D matrix of examples X, output a vector of predicted class labels
    def predict (self, x):
        return np.sign(np.dot(x, self.w) + self.b)



def test1 ():
    # Set up toy problem
    X = np.array([ [1,1], [2,1], [1,2], [2,3], [1,4], [2,4] ])
    y = np.array([-1,-1,-1,1,1,1])

    # Train your model
    svm4342 = SVM4342()
    svm4342.fit(X, y)
    print(svm4342.w, svm4342.b)

    # Compare with sklearn
    svm = sklearn.svm.SVC(kernel='linear', C=1e15)  # 1e15 -- approximate hard-margin
    svm.fit(X, y)
    print(svm.coef_, svm.intercept_)

    acc = np.mean(svm4342.predict(X) == svm.predict(X))
    print("Acc={}".format(acc))

def test2 (seed):
    np.random.seed(seed)

    # Generate random data
    X = np.random.rand(20,3)
    # Generate random labels based on a random "ground-truth" hyperplane
    while True:
        w = np.random.rand(3)
        y = 2*(X.dot(w) > 0.5) - 1
        # Keep generating ground-truth hyperplanes until we find one
        # that results in 2 classes
        if len(np.unique(y)) > 1:
            break

    svm4342 = SVM4342()
    svm4342.fit(X, y)

    # Compare with sklearn
    svm = sklearn.svm.SVC(kernel='linear', C=1e15)  # 1e15 -- approximate hard margin
    svm.fit(X, y)
    diff = np.linalg.norm(svm.coef_ - svm4342.w) + np.abs(svm.intercept_ - svm4342.b)
    print(diff)

    acc = np.mean(svm4342.predict(X) == svm.predict(X))
    print("Acc={}".format(acc))

    if acc == 1 and diff < 1e-1:
        print("Passed")

if __name__ == "__main__":
    test1()
    for seed in range(5):
        test2(seed)
